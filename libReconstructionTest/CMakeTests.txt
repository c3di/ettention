cmake_minimum_required(VERSION 2.8)

INCLUDE(../cmake_custom/CommonFlags)

SetPolicies()

if(MSVC)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP -Zm200")
	add_definitions(/D_VARIADIC_MAX=10  /D_USE_MATH_DEFINES)
	add_definitions(/DTESTDATA_DIR=\"${CMAKE_CURRENT_SOURCE_DIR}\")
else(MSVC)
	add_definitions(-DTESTDATA_DIR=\"${CMAKE_CURRENT_SOURCE_DIR}\")
	add_definitions(-DBOOST_LOG_DYN_LINK)
endif(MSVC)

# find all directories containing header files
set(FILE_TYPES *.h *.hpp *.c *.cpp)
find_directories(DIRS ${TEST_SOURCE_DIR} "${FILE_TYPES}")
# generate source tree
generate_source_tree(HOST_SOURCES "${DIRS}" "${FILE_TYPES}")

set(RECONSTRUCTION_TEST_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")

# set include directories
include_directories("${RECONSTRUCTION_TEST_INCLUDE_DIR}"
					"${GTEST_INCLUDE_DIR}"
					"${Boost_INCLUDE_DIRS}"
					"${MEMORYMANAGER_INCLUDE_DIR}"
					"${LIBRECONSTRUCTION_INCLUDE_DIR}"
					"${RECONSTRUCTION_CONSOLE_APP_INCLUDE_DIR}"				
					"${OPENCL_INCLUDE_DIR}"
					"${CLAMDFFT_INCLUDE_DIRS}"
					"${FREEIMAGE_INCLUDE_DIR}"
					)

link_directories("${Boost_LIBRARY_DIRS}")

set(SOURCES_CONSOLEAPP
		"../reconstructConsoleApp/src/setup/CommandLineToolParameterSource.cpp"
		)

set(HEADERS_CONSOLEAPP
		"../reconstructConsoleApp/src/setup/CommandLineToolParameterSource.h"
		)

add_executable(${PROJECT_NAME}
			   ${HOST_SOURCES}
			   ${SOURCES_CONSOLEAPP}
			   ${HEADERS_CONSOLEAPP})

target_link_libraries(${PROJECT_NAME}
			libReconstruction
			${GTEST_BOTH_LIBRARIES}
			${OPENCL_LIBRARIES}
			)

if(CMAKE_COMPILER_IS_GNUCC)
	target_link_libraries(${PROJECT_NAME} ${Boost_LIBRARIES} pthread)
endif(CMAKE_COMPILER_IS_GNUCC)

add_precompiled_header(${PROJECT_NAME} stdafx.h)

